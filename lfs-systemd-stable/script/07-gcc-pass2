#!/bin/bash -e

. build-properties

PROGRAM="gcc-6.3.0"
SOURCE_DIR="/mnt/lfs/sources"
TARBALL="$PROGRAM.tar.bz2"

cd $SOURCE_DIR

if [ "$TARBALL" != "" ]; then
	DIRECTORY=`tar -tf $TARBALL | cut -d/ -f1 | uniq`
	rm -rf $DIRECTORY || true
	tar xf $TARBALL
	cd $DIRECTORY
fi

{ time \
   {

	cat gcc/limitx.h gcc/glimits.h gcc/limity.h > \
		`dirname $($LFS_TGT-gcc -print-libgcc-file-name)`/include-fixed/limits.h

    for file in gcc/config/{linux,i386/linux{,64}}.h
	do
		cp -uv $file{,.orig}
	sed -e 's@/lib\(64\)\?\(32\)\?/ld@/tools&@g' \
		-e 's@/usr@/tools@g' $file.orig > $file
	echo '
	#undef STANDARD_STARTFILE_PREFIX_1
	#undef STANDARD_STARTFILE_PREFIX_2
	#define STANDARD_STARTFILE_PREFIX_1 "/tools/lib/"
	#define STANDARD_STARTFILE_PREFIX_2 ""' >> $file
		touch $file.orig
	done

	case $(uname -m) in
	  x86_64)
		sed -e '/m64=/s/lib64/lib/' \
			-i.orig gcc/config/i386/t-linux64
	  ;;
	esac
	
	tar -xf ../mpfr-3.1.5.tar.xz
	mv -v mpfr-3.1.5 mpfr
	tar -xf ../gmp-6.1.2.tar.xz
	mv -v gmp-6.1.2 gmp
	tar -xf ../mpc-1.0.3.tar.gz
	mv -v mpc-1.0.3 mpc
	
	mkdir -v build
	cd       build
	
	CC=$LFS_TGT-gcc                                    \
	CXX=$LFS_TGT-g++                                   \
	AR=$LFS_TGT-ar                                     \
	RANLIB=$LFS_TGT-ranlib                             \
	../configure                                       \
		--prefix=/tools                                \
		--with-local-prefix=/tools                     \
		--with-native-system-header-dir=/tools/include \
		--enable-languages=c,c++                       \
		--disable-libstdcxx-pch                        \
		--disable-multilib                             \
		--disable-bootstrap                            \
		--disable-libgomp
	make
	make install
	
	ln -sv gcc /tools/bin/cc
	
	echo 'int main(){}' > dummy.c
	cc dummy.c
	readelf -l a.out | grep ': /tools'

	echo "[Requesting program interpreter: /tools/lib/ld-linux.so.2]"
	
	rm -v dummy.c a.out

   }
}

cd $SOURCE_DIR
if [ "$TARBALL" != "" ]; then
	rm -rf $DIRECTORY
fi
